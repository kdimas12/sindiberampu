---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import FormattedDate from "../../components/FormattedDate.astro";
import TagLink from "../../components/TagLink.astro";

import { contentfulClient } from "../../lib/contentful";
import type { BlogPost } from "../../lib/contentful";

const entries = await contentfulClient.getEntries<BlogPost>({
  content_type: "blogPost",
});

const posts = entries.items.map((entry) => {
  const { title, slug, date } = entry.fields;

  const tags = entry.metadata.tags?.map((tag) => tag.sys.id);

  return {
    title,
    slug,
    date,
    tags,
  };
});

// Organize posts by year
const postByYear = {};

posts.forEach((post) => {
  const pubDate = new Date(post.date);
  const year = pubDate.getFullYear();
  if (!postByYear[year]) {
    postByYear[year] = [];
  }
  postByYear[year].push(post);
});
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`Blog - ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
  </head>
  <body
    class="w-full mx-auto my-4 max-w-screen-md dark:bg-neutral-800 dark:text-neutral-300 transition-colors duration-300"
  >
    <Header />
    <main
      class="w-full max-w-screen-md mx-auto my-4 px-4 flex flex-col gap-4 justify-center"
    >
      {
        Object.keys(postByYear)
          .sort((a, b) => parseInt(b) - parseInt(a))
          .map((year) => (
            <div class="flex flex-col">
              <h2 class=" text-black dark:text-white font-bold mb-8">{year}</h2>
              <div class="flex flex-col gap-4">
                {postByYear[parseInt(year)].map((post) => (
                  <div class="flex gap-2 justify-between border-b pb-4">
                    <div class="flex flex-col">
                      <FormattedDate date={post.date} />
                      <a class="font-bold text-lg" href={`/blog/${post.slug}`}>
                        {post.title}
                      </a>
                      <div class="flex gap-2">
                        {post.tags?.map((i: string) => {
                          return <TagLink tag={i} />;
                        })}
                      </div>
                    </div>
                    {/* <a href={`/blog/${post.slug}`}>
                      <img
                        src={post.data.heroImage}
                        alt=""
                        class="w-40 h-24 bg-contain border border-gray-200"
                      />
                    </a> */}
                  </div>
                ))}
              </div>
            </div>
          ))
      }
    </main>
    <Footer />
  </body>
</html>
